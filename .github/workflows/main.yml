name: Windows RDP via Tailscale (6h)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360   # GitHub max per job = 6h
    steps:
      - name: Create RDP user + enable RDP
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $u = 'Bullettemporary'
          $p = 'Bullet@12345'
          $sec = ConvertTo-SecureString $p -AsPlainText -Force

          if (-not (Get-LocalUser -Name $u -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $u -Password $sec -AccountNeverExpires -PasswordNeverExpires:$true
            Add-LocalGroupMember -Group 'Administrators' -Member $u
            Add-LocalGroupMember -Group 'Remote Desktop Users' -Member $u
          } else {
            Set-LocalUser -Name $u -Password $sec -AccountNeverExpires:$true
            Enable-LocalUser -Name $u
            Add-LocalGroupMember -Group 'Administrators' -Member $u -ErrorAction SilentlyContinue
            Add-LocalGroupMember -Group 'Remote Desktop Users' -Member $u -ErrorAction SilentlyContinue
          }

          # Enable RDP + firewall
          Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup 'Remote Desktop' | Out-Null
          netsh advfirewall firewall add rule name="RDP-3389" dir=in action=allow protocol=TCP localport=3389 | Out-Null

      - name: Install Tailscale
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $msi = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi" -OutFile $msi
          Start-Process msiexec.exe -ArgumentList "/i `"$msi`" /qn /norestart" -Wait
          Remove-Item $msi -Force

      - name: Bring up Tailscale (auth key inline)
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $ts = Join-Path $env:ProgramFiles 'Tailscale\tailscale.exe'
          if (-not (Test-Path $ts)) { throw "tailscale.exe not found" }

          # Hostname uses GitHub run id to avoid collisions
          $hn = "gha-win-" + $env:GITHUB_RUN_ID

          # ========= INSECURE: hard-coded auth key as requested =========
          & $ts up --authkey "tskey-auth-k4JEfT46k321CNTRL-VkNpP8RxfacpReWAhkF3acoAosmZXhSz" --hostname $hn
          if ($LASTEXITCODE -ne 0) { throw "tailscale up failed" }

          # Get Tailscale IPv4
          Start-Sleep 3
          $ips = & $ts ip -4
          $tsIP = ($ips | Select-Object -First 1).Trim()
          if (-not $tsIP) { throw "No Tailscale IPv4 assigned" }

          "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Append

          Write-Host "================= Tailscale RDP ================="
          Write-Host "Tailscale IP : $tsIP"
          Write-Host "Username     : Bullettemporary"
          Write-Host "Password     : Bullet@12345"
          Write-Host "Note: Connect from another device signed into the SAME Tailnet."
          Write-Host "================================================="

      - name: Verify RDP port on Tailscale IP
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $ip = $env:TAILSCALE_IP
          if (-not $ip) { throw "TAILSCALE_IP missing" }
          $res = Test-NetConnection -ComputerName $ip -Port 3389
          if (-not $res.TcpTestSucceeded) { throw "TCP 3389 test failed to $ip" }
          Write-Host "RDP reachable on $ip:3389"

      - name: Keep session alive (up to 6h)
        shell: powershell
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          $end = (Get-Date).AddHours(6)
          while ((Get-Date) -lt $end) {
            Write-Host "[$(Get-Date -Format 'HH:mm:ss')] RDP alive on $env:TAILSCALE_IP (user: Bullettemporary)"
            Start-Sleep -Seconds 300
          }
